'------------------------------------------------------------------------------
' <auto-generated>
'     此代码由工具生成。
'     运行时版本:4.0.30319.34014
'
'     对此文件的更改可能会导致不正确的行为，并且如果
'     重新生成代码，这些更改将会丢失。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'此源代码是由 Microsoft.VSDesigner 4.0.30319.34014 版自动生成。
'
Namespace ZhuBrothersService
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ServiceSoap", [Namespace]:="http://www.zhubrothers.com/Service.asmx")>  _
    Partial Public Class Service
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private WebServiceExcuteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebServiceExcuteTableOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebServiceExcuteTableClearOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebServiceExcuteTableDeleteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebExcuteQueryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebExcuteQuerySQLOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebExcuteSQLOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebExecuteSQLImageBinaryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebExecuteSQLImageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebExcuteQueryUpdateInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBinaryFormatDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.DemoDataBase.My.MySettings.Default.DemoDataBase_ZhuBrothersService_Service
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event WebServiceExcuteCompleted As WebServiceExcuteCompletedEventHandler
        
        '''<remarks/>
        Public Event WebServiceExcuteTableCompleted As WebServiceExcuteTableCompletedEventHandler
        
        '''<remarks/>
        Public Event WebServiceExcuteTableClearCompleted As WebServiceExcuteTableClearCompletedEventHandler
        
        '''<remarks/>
        Public Event WebServiceExcuteTableDeleteCompleted As WebServiceExcuteTableDeleteCompletedEventHandler
        
        '''<remarks/>
        Public Event WebExcuteQueryCompleted As WebExcuteQueryCompletedEventHandler
        
        '''<remarks/>
        Public Event WebExcuteQuerySQLCompleted As WebExcuteQuerySQLCompletedEventHandler
        
        '''<remarks/>
        Public Event WebExcuteSQLCompleted As WebExcuteSQLCompletedEventHandler
        
        '''<remarks/>
        Public Event WebExecuteSQLImageBinaryCompleted As WebExecuteSQLImageBinaryCompletedEventHandler
        
        '''<remarks/>
        Public Event WebExecuteSQLImageCompleted As WebExecuteSQLImageCompletedEventHandler
        
        '''<remarks/>
        Public Event WebExcuteQueryUpdateInfoCompleted As WebExcuteQueryUpdateInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBinaryFormatDataCompleted As GetBinaryFormatDataCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zhubrothers.com/Service.asmx/WebServiceExcute", RequestNamespace:="http://www.zhubrothers.com/Service.asmx", ResponseNamespace:="http://www.zhubrothers.com/Service.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebServiceExcute(ByVal DataInfo As System.Data.DataSet) As Boolean
            Dim results() As Object = Me.Invoke("WebServiceExcute", New Object() {DataInfo})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebServiceExcuteAsync(ByVal DataInfo As System.Data.DataSet)
            Me.WebServiceExcuteAsync(DataInfo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebServiceExcuteAsync(ByVal DataInfo As System.Data.DataSet, ByVal userState As Object)
            If (Me.WebServiceExcuteOperationCompleted Is Nothing) Then
                Me.WebServiceExcuteOperationCompleted = AddressOf Me.OnWebServiceExcuteOperationCompleted
            End If
            Me.InvokeAsync("WebServiceExcute", New Object() {DataInfo}, Me.WebServiceExcuteOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebServiceExcuteOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebServiceExcuteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebServiceExcuteCompleted(Me, New WebServiceExcuteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zhubrothers.com/Service.asmx/WebServiceExcuteTable", RequestNamespace:="http://www.zhubrothers.com/Service.asmx", ResponseNamespace:="http://www.zhubrothers.com/Service.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebServiceExcuteTable(ByVal DataInfo As System.Data.DataSet) As Boolean
            Dim results() As Object = Me.Invoke("WebServiceExcuteTable", New Object() {DataInfo})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebServiceExcuteTableAsync(ByVal DataInfo As System.Data.DataSet)
            Me.WebServiceExcuteTableAsync(DataInfo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebServiceExcuteTableAsync(ByVal DataInfo As System.Data.DataSet, ByVal userState As Object)
            If (Me.WebServiceExcuteTableOperationCompleted Is Nothing) Then
                Me.WebServiceExcuteTableOperationCompleted = AddressOf Me.OnWebServiceExcuteTableOperationCompleted
            End If
            Me.InvokeAsync("WebServiceExcuteTable", New Object() {DataInfo}, Me.WebServiceExcuteTableOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebServiceExcuteTableOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebServiceExcuteTableCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebServiceExcuteTableCompleted(Me, New WebServiceExcuteTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zhubrothers.com/Service.asmx/WebServiceExcuteTableClear", RequestNamespace:="http://www.zhubrothers.com/Service.asmx", ResponseNamespace:="http://www.zhubrothers.com/Service.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebServiceExcuteTableClear(ByVal OperType As String) As Boolean
            Dim results() As Object = Me.Invoke("WebServiceExcuteTableClear", New Object() {OperType})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebServiceExcuteTableClearAsync(ByVal OperType As String)
            Me.WebServiceExcuteTableClearAsync(OperType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebServiceExcuteTableClearAsync(ByVal OperType As String, ByVal userState As Object)
            If (Me.WebServiceExcuteTableClearOperationCompleted Is Nothing) Then
                Me.WebServiceExcuteTableClearOperationCompleted = AddressOf Me.OnWebServiceExcuteTableClearOperationCompleted
            End If
            Me.InvokeAsync("WebServiceExcuteTableClear", New Object() {OperType}, Me.WebServiceExcuteTableClearOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebServiceExcuteTableClearOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebServiceExcuteTableClearCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebServiceExcuteTableClearCompleted(Me, New WebServiceExcuteTableClearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zhubrothers.com/Service.asmx/WebServiceExcuteTableDelete", RequestNamespace:="http://www.zhubrothers.com/Service.asmx", ResponseNamespace:="http://www.zhubrothers.com/Service.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebServiceExcuteTableDelete(ByVal strTableName As String) As Boolean
            Dim results() As Object = Me.Invoke("WebServiceExcuteTableDelete", New Object() {strTableName})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebServiceExcuteTableDeleteAsync(ByVal strTableName As String)
            Me.WebServiceExcuteTableDeleteAsync(strTableName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebServiceExcuteTableDeleteAsync(ByVal strTableName As String, ByVal userState As Object)
            If (Me.WebServiceExcuteTableDeleteOperationCompleted Is Nothing) Then
                Me.WebServiceExcuteTableDeleteOperationCompleted = AddressOf Me.OnWebServiceExcuteTableDeleteOperationCompleted
            End If
            Me.InvokeAsync("WebServiceExcuteTableDelete", New Object() {strTableName}, Me.WebServiceExcuteTableDeleteOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebServiceExcuteTableDeleteOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebServiceExcuteTableDeleteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebServiceExcuteTableDeleteCompleted(Me, New WebServiceExcuteTableDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zhubrothers.com/Service.asmx/WebExcuteQuery", RequestNamespace:="http://www.zhubrothers.com/Service.asmx", ResponseNamespace:="http://www.zhubrothers.com/Service.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebExcuteQuery(ByVal strSQL As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WebExcuteQuery", New Object() {strSQL})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebExcuteQueryAsync(ByVal strSQL As String)
            Me.WebExcuteQueryAsync(strSQL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebExcuteQueryAsync(ByVal strSQL As String, ByVal userState As Object)
            If (Me.WebExcuteQueryOperationCompleted Is Nothing) Then
                Me.WebExcuteQueryOperationCompleted = AddressOf Me.OnWebExcuteQueryOperationCompleted
            End If
            Me.InvokeAsync("WebExcuteQuery", New Object() {strSQL}, Me.WebExcuteQueryOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebExcuteQueryOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebExcuteQueryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebExcuteQueryCompleted(Me, New WebExcuteQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zhubrothers.com/Service.asmx/WebExcuteQuerySQL", RequestNamespace:="http://www.zhubrothers.com/Service.asmx", ResponseNamespace:="http://www.zhubrothers.com/Service.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebExcuteQuerySQL(ByVal strSQL As String, ByVal strTableName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WebExcuteQuerySQL", New Object() {strSQL, strTableName})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebExcuteQuerySQLAsync(ByVal strSQL As String, ByVal strTableName As String)
            Me.WebExcuteQuerySQLAsync(strSQL, strTableName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebExcuteQuerySQLAsync(ByVal strSQL As String, ByVal strTableName As String, ByVal userState As Object)
            If (Me.WebExcuteQuerySQLOperationCompleted Is Nothing) Then
                Me.WebExcuteQuerySQLOperationCompleted = AddressOf Me.OnWebExcuteQuerySQLOperationCompleted
            End If
            Me.InvokeAsync("WebExcuteQuerySQL", New Object() {strSQL, strTableName}, Me.WebExcuteQuerySQLOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebExcuteQuerySQLOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebExcuteQuerySQLCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebExcuteQuerySQLCompleted(Me, New WebExcuteQuerySQLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zhubrothers.com/Service.asmx/WebExcuteSQL", RequestNamespace:="http://www.zhubrothers.com/Service.asmx", ResponseNamespace:="http://www.zhubrothers.com/Service.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebExcuteSQL(ByVal strSQL As String) As Boolean
            Dim results() As Object = Me.Invoke("WebExcuteSQL", New Object() {strSQL})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebExcuteSQLAsync(ByVal strSQL As String)
            Me.WebExcuteSQLAsync(strSQL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebExcuteSQLAsync(ByVal strSQL As String, ByVal userState As Object)
            If (Me.WebExcuteSQLOperationCompleted Is Nothing) Then
                Me.WebExcuteSQLOperationCompleted = AddressOf Me.OnWebExcuteSQLOperationCompleted
            End If
            Me.InvokeAsync("WebExcuteSQL", New Object() {strSQL}, Me.WebExcuteSQLOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebExcuteSQLOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebExcuteSQLCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebExcuteSQLCompleted(Me, New WebExcuteSQLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zhubrothers.com/Service.asmx/WebExecuteSQLImageBinary", RequestNamespace:="http://www.zhubrothers.com/Service.asmx", ResponseNamespace:="http://www.zhubrothers.com/Service.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebExecuteSQLImageBinary(<System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal DataInfo() As Byte) As Boolean
            Dim results() As Object = Me.Invoke("WebExecuteSQLImageBinary", New Object() {DataInfo})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebExecuteSQLImageBinaryAsync(ByVal DataInfo() As Byte)
            Me.WebExecuteSQLImageBinaryAsync(DataInfo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebExecuteSQLImageBinaryAsync(ByVal DataInfo() As Byte, ByVal userState As Object)
            If (Me.WebExecuteSQLImageBinaryOperationCompleted Is Nothing) Then
                Me.WebExecuteSQLImageBinaryOperationCompleted = AddressOf Me.OnWebExecuteSQLImageBinaryOperationCompleted
            End If
            Me.InvokeAsync("WebExecuteSQLImageBinary", New Object() {DataInfo}, Me.WebExecuteSQLImageBinaryOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebExecuteSQLImageBinaryOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebExecuteSQLImageBinaryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebExecuteSQLImageBinaryCompleted(Me, New WebExecuteSQLImageBinaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zhubrothers.com/Service.asmx/WebExecuteSQLImage", RequestNamespace:="http://www.zhubrothers.com/Service.asmx", ResponseNamespace:="http://www.zhubrothers.com/Service.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebExecuteSQLImage(ByVal DataInfo As System.Data.DataSet) As Boolean
            Dim results() As Object = Me.Invoke("WebExecuteSQLImage", New Object() {DataInfo})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebExecuteSQLImageAsync(ByVal DataInfo As System.Data.DataSet)
            Me.WebExecuteSQLImageAsync(DataInfo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebExecuteSQLImageAsync(ByVal DataInfo As System.Data.DataSet, ByVal userState As Object)
            If (Me.WebExecuteSQLImageOperationCompleted Is Nothing) Then
                Me.WebExecuteSQLImageOperationCompleted = AddressOf Me.OnWebExecuteSQLImageOperationCompleted
            End If
            Me.InvokeAsync("WebExecuteSQLImage", New Object() {DataInfo}, Me.WebExecuteSQLImageOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebExecuteSQLImageOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebExecuteSQLImageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebExecuteSQLImageCompleted(Me, New WebExecuteSQLImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zhubrothers.com/Service.asmx/WebExcuteQueryUpdateInfo", RequestNamespace:="http://www.zhubrothers.com/Service.asmx", ResponseNamespace:="http://www.zhubrothers.com/Service.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebExcuteQueryUpdateInfo() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WebExcuteQueryUpdateInfo", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebExcuteQueryUpdateInfoAsync()
            Me.WebExcuteQueryUpdateInfoAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebExcuteQueryUpdateInfoAsync(ByVal userState As Object)
            If (Me.WebExcuteQueryUpdateInfoOperationCompleted Is Nothing) Then
                Me.WebExcuteQueryUpdateInfoOperationCompleted = AddressOf Me.OnWebExcuteQueryUpdateInfoOperationCompleted
            End If
            Me.InvokeAsync("WebExcuteQueryUpdateInfo", New Object(-1) {}, Me.WebExcuteQueryUpdateInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebExcuteQueryUpdateInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebExcuteQueryUpdateInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebExcuteQueryUpdateInfoCompleted(Me, New WebExcuteQueryUpdateInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zhubrothers.com/Service.asmx/GetBinaryFormatData", RequestNamespace:="http://www.zhubrothers.com/Service.asmx", ResponseNamespace:="http://www.zhubrothers.com/Service.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBinaryFormatData(ByVal strSQL As String) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("GetBinaryFormatData", New Object() {strSQL})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBinaryFormatDataAsync(ByVal strSQL As String)
            Me.GetBinaryFormatDataAsync(strSQL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBinaryFormatDataAsync(ByVal strSQL As String, ByVal userState As Object)
            If (Me.GetBinaryFormatDataOperationCompleted Is Nothing) Then
                Me.GetBinaryFormatDataOperationCompleted = AddressOf Me.OnGetBinaryFormatDataOperationCompleted
            End If
            Me.InvokeAsync("GetBinaryFormatData", New Object() {strSQL}, Me.GetBinaryFormatDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBinaryFormatDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBinaryFormatDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBinaryFormatDataCompleted(Me, New GetBinaryFormatDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub WebServiceExcuteCompletedEventHandler(ByVal sender As Object, ByVal e As WebServiceExcuteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebServiceExcuteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub WebServiceExcuteTableCompletedEventHandler(ByVal sender As Object, ByVal e As WebServiceExcuteTableCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebServiceExcuteTableCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub WebServiceExcuteTableClearCompletedEventHandler(ByVal sender As Object, ByVal e As WebServiceExcuteTableClearCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebServiceExcuteTableClearCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub WebServiceExcuteTableDeleteCompletedEventHandler(ByVal sender As Object, ByVal e As WebServiceExcuteTableDeleteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebServiceExcuteTableDeleteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub WebExcuteQueryCompletedEventHandler(ByVal sender As Object, ByVal e As WebExcuteQueryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebExcuteQueryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub WebExcuteQuerySQLCompletedEventHandler(ByVal sender As Object, ByVal e As WebExcuteQuerySQLCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebExcuteQuerySQLCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub WebExcuteSQLCompletedEventHandler(ByVal sender As Object, ByVal e As WebExcuteSQLCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebExcuteSQLCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub WebExecuteSQLImageBinaryCompletedEventHandler(ByVal sender As Object, ByVal e As WebExecuteSQLImageBinaryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebExecuteSQLImageBinaryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub WebExecuteSQLImageCompletedEventHandler(ByVal sender As Object, ByVal e As WebExecuteSQLImageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebExecuteSQLImageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub WebExcuteQueryUpdateInfoCompletedEventHandler(ByVal sender As Object, ByVal e As WebExcuteQueryUpdateInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebExcuteQueryUpdateInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub GetBinaryFormatDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetBinaryFormatDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBinaryFormatDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
End Namespace
